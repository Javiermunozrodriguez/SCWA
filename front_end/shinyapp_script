install.packages("DT")

library("DT")

library(shiny)
install.packages("ggplot2")
require("ggplot2")
library(ggplot2)
library(data.table)
install.packages("Rcpp")
library("Rcpp")
install.packages("shiny")
library("shiny")
library(ggplot2)
library(dplyr)

install.packages("magrittr")
library(magrittr)

summary((consumption_pred_data_madrid_2016_by_coor))

consumption_pred_data_madrid_2016_by_coor$Distrito <- as.factor(consumption_pred_data_madrid_2016_by_coor$Distrito)

consumption_pred_data_madrid_2016_by_coor$Tipo_consumidor <- as.factor(consumption_pred_data_madrid_2016_by_coor$Tipo_consumidor)

consumption_pred_data_madrid_2016_by_coor$Anual_consumption <- rowSums(consumption_pred_data_madrid_2016_by_coor[, c(3:14)])

consumption_pred_data_madrid_2016_by_coor$Distrito <- as.character(consumption_pred_data_madrid_2016_by_coor$Distrito)

consumption_pred_data_madrid_2016_by_coor$Tipo_consumidor <- as.character(consumption_pred_data_madrid_2016_by_coor$Tipo_consumidor)


# trabajamos en la app de shiny



colnames(scwa)[17] <-"Consumo_anual"

write.csv(scwa,file="scwa.csv")

#### UII###
ui <- fluidPage(
  
  titlePanel("Perfil de consumo de Agua en Madrid"),
  
  sidebarLayout(sidebarPanel(width=4.5,
    
      #sliderInput("n","Number of observations:", value = 50000, min = 1, max = 178598),
      sliderInput("Consumo_anualInput","Consumo anual:", c(25, 50000), min = 0, max = 250000, post = " m3"),
      
      radioButtons("Tipo_consumidorInput", "Tipo de consumidor",
                   choices = c("comercial", "domestico baja", "domestico medio", "domestico residencial", "especial", "industrial","social"),
                   selected = "comercial"),
      
      uiOutput("DistritoOutput")
    ),
    
    mainPanel(
      plotOutput("coolplot"),
      br(), br(),
      tableOutput("results")
      )
    )
  
)

##### SERVER####
server <- function(input, output) {
  output$DistritoOutput <- renderUI({
    selectInput("DistritoInput", "Distrito",
                sort(unique(scwa$Distrito)),
                selected = "Centro")
  })  
  
  filtered <- reactive({
    if (is.null(input$DistritoInput)) {
      return(NULL)
    }    
    
    scwa %>%
      filter(
             Tipo_consumidor == input$Tipo_consumidorInput,
             Distrito == input$DistritoInput
      )
  })
  
  output$coolplot <- renderPlot({
    if (is.null(filtered())) {
      return()
    }
    ggplot(filtered(), aes(Distrito, Tipo_consumidor)) +
      geom_count(alpha=0.5)
  })
  
  output$results <- renderTable({
    filtered()
  })
}

#### APP ###
shinyApp(ui = ui, server = server)





